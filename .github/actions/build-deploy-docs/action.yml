name: Docs
description: Build and deploy docs to gh-pages branch.
inputs:
  version:
    description: "Branch or tag (must exist). If missing, uses current branch."
    type: string
  latest:
    description: "Branch or tag to mark the 'latest' version."
    type: string
    default: "main"

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3

    - name: Install poetry
      shell: bash
      run: pipx install poetry

    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: "poetry"

    - name: Install project with mkdocs and plugins
      shell: bash
      run: poetry install --with docs

    - name: Configure Git user (Github Actions Bot)
      shell: bash
      run: |
        git config --local user.name "github-actions[bot]"
        git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"

    - name: Check out or initialize the gh-pages branch
      shell: bash
      run: |
        if git fetch origin gh-pages:gh-pages
        then
          echo "Found existing gh-pages branch."
        else
          echo "Creating new gh-pages branch and initializing mike."
          git fetch origin ${{ inputs.latest }}
          git checkout ${{ inputs.latest }}
          poetry run mike deploy -u ${{ inputs.latest }} latest
          poetry run mike set-default latest
        fi

    - name: Generate and deploy documentation
      shell: bash
      run: |
        VERSION="${{ inputs.version }}"
        if [ -z "${VERSION}" ]
        then
          # use current branch name
          VERSION=$(echo ${GITHUB_REF#refs/heads/})
        else
          # get branch or tag
          git fetch --all --tags
          git checkout $VERSION
        fi
        # build and deploy docs to gh-pages branch
        poetry run mike deploy -u --push $VERSION
