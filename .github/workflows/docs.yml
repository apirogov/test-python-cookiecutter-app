# Build documentation and deploy it to GH Pages.
name: Docs

on:
  workflow_run:
    workflows: [Tests]
    types: [completed]
    branches: ["main", "dev"]

  # allow to actively call this workflow from other places
  # (used for tag-triggered releases)
  workflow_call:
    inputs:
      version:
        description: "Branch or tag (must exist). If missing, uses current branch."
        type: string
      latest:
        description: "Branch or tag to mark the 'latest' version."
        type: string
        default: "main"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_call' }}
    permissions: write-all
    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "poetry"

      - name: Install project with mkdocs and plugins
        run: poetry install --with docs

      - name: Configure Git user (Github Actions Bot)
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Check out or initialize the gh-pages branch
        shell: bash
        run: |
          if git fetch origin gh-pages:gh-pages
          then
            echo "Found existing gh-pages branch."
          else
            echo "Creating new gh-pages branch and initializing mike."
            git fetch origin ${{ inputs.latest }}
            git checkout ${{ inputs.latest }}
            poetry run mike deploy -u ${{ inputs.latest }} latest
            poetry run mike set-default latest
          fi

      - name: Generate and deploy documentation
        run: |
          VERSION="${{ inputs.version }}"
          if [ -z "${VERSION}" ]
          then
            # use current branch name
            VERSION=$(echo ${GITHUB_REF#refs/heads/})
          else
            # get branch or tag
            git fetch --all --tags
            git checkout $VERSION
          fi
          # build and deploy docs to gh-pages branch
          poetry run mike deploy -u --push $VERSION

  docs-ci:
    # deploy docs for main and dev branches automatically
    # if the test pipeline successfully completed
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions: write-all
    uses: ./.github/workflows/docs.yml
