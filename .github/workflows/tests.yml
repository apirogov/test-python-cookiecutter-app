# Automatically perform all QA tasks - run linters, tests, etc.
name: Tests

on:
  push:
  pull_request:
  workflow_call:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install poe, pre-commit and safety
        run: pip install poethepoet pre-commit safety

      # NOTE: using custom cache, to include pre-commit linters + deps
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pre-commit
            ~/.cache/pip
          key: ${{ hashFiles('.pre-commit-config.yaml') }}-pre-commit

      - name: Check that all static analysis tools run without errors
        run: poetry run poe lint --all-files

      - name: Scan dependencies for known vulnerabilities
        run: safety check -r pyproject.toml

  test-build-docs:
    # make sure that documentation is buildable
    # (better to know that before e.g. a PR is merged)
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "poetry"

      - name: Check that documentation builds without errors
        run: |
          poetry install --with docs
          poetry run poe docs

  test:
    # run tests with different OS and Python combinations
    needs: lint
    strategy:
      fail-fast: true
      matrix:
        os: [ "ubuntu-latest" ]
        python-version: [ "3.8", "3.9", "3.10" ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: Check that tests complete without errors
        run: |
          poetry install
          poetry run poe test

  docs:
    # build + deploy documentation for the primary branches
    needs: [test, test-build-docs]
    permissions: write-all
    if: |
      ${{
        github.event_name == 'push' && (
          github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
        )
      }}
    steps:
    - uses: actions/checkout@v3
    - uses: ./.github/actions/build-deploy-docs
